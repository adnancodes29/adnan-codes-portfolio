(()=>{var e={157:()=>{let e=document.querySelector(".year"),t=(new Date).getFullYear();e.innerHTML=t}},t={};function r(n){var a=t[n];if(void 0!==a)return a.exports;var c=t[n]={exports:{}};return e[n](c,c.exports,r),c.exports}r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var a=n.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=n[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{"use strict";r.p;const e=function(){const e=document.querySelector(".nav");document.addEventListener("scroll",(()=>{window.scrollY>100?e.classList.add("active"):e.classList.remove("active")}))};const t=function(){const e=document.querySelector(".card__container");[{year:2022,name:"Forwwwards Studios",description:"This is web agency website",url:"https://forwwwardstudios.000webhostapp.com/",git:"https://github.com/adnancodes29/Forwwward-Studios"},{year:2024,name:"Tailwind and Webpack",description:"How to use tailwind and webpack",url:"#",git:"https://github.com/adnancodes29/TailwindCss-and-WebPack5"},{year:2021,name:"AdnanCodes VSC Theme",description:"A modern clean theme created for VSC",url:"https://marketplace.visualstudio.com/items?itemName=AdnanCodes.adnancodes",git:"#"}].forEach((t=>{const r=document.createElement("div");r.className="card",r.innerHTML=`\n        <div class="card__top">\n        <p class="card--year">${t.year}</p>\n        <h4 class="card--title">${t.name}</h4>\n        <p class="card--description">${t.description}</p>\n        </div>\n        <div class="card__bottom">\n        <a href="${t.url}" target="_blank" class="btn">Demo</a>\n        <a href="${t.git}" target="_blank" class="btn">Code</a>\n        </div>`,e.insertAdjacentElement("beforeend",r)})),document.querySelectorAll(".btn").forEach((e=>{"#"===e.getAttribute("href")&&e.remove()}))};r(157);e(),t()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,